{"ast":null,"code":"import { BehaviorSubject, delay, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PortfolioService {\n  constructor(http) {\n    this.http = http;\n    this._portfolios$ = new BehaviorSubject([]);\n  }\n  getPortfolios() {\n    if (!this._portfolios$?.value?.length) {\n      const mockData = [{\n        id: 1,\n        assetType: 'Stock',\n        quantity: 100,\n        purchasePrice: 250,\n        purchaseDate: '2025-07-01'\n      }\n      // {\n      //   id: 2,\n      //   assetType: 'Bond',\n      //   quantity: 50,\n      //   purchasePrice: 105,\n      //   purchaseDate: '2025-06-20',\n      // },\n      ];\n\n      return of(mockData).pipe(delay(300), tap(data => this._portfolios$.next(data)));\n    } else {\n      return of(this._portfolios$.value).pipe(delay(100));\n    }\n  }\n  portfolios$() {\n    return this._portfolios$.asObservable();\n  }\n  addPortfolio(newPortfolio) {\n    console.log('newPortfolio', newPortfolio);\n    const id = this._portfolios$.value.length + 1;\n    console.log('value', id);\n    const portfolioWithId = {\n      ...newPortfolio,\n      id\n    };\n    return of(portfolioWithId).pipe(delay(300), tap(portfolio => {\n      const updated = [...this._portfolios$.value, portfolio];\n      this._portfolios$.next(updated);\n      this._portfolios$.subscribe(data => {\n        console.log('data', data);\n      });\n    }));\n  }\n  deletePortfolio(id) {\n    return of(undefined).pipe(delay(300), tap(() => {\n      const updated = this._portfolios$.value.filter(p => p.id !== id);\n      this._portfolios$.next(updated);\n    }));\n  }\n  static {\n    this.ɵfac = function PortfolioService_Factory(t) {\n      return new (t || PortfolioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PortfolioService,\n      factory: PortfolioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { PortfolioService };","map":{"version":3,"names":["BehaviorSubject","delay","of","tap","PortfolioService","constructor","http","_portfolios$","getPortfolios","value","length","mockData","id","assetType","quantity","purchasePrice","purchaseDate","pipe","data","next","portfolios$","asObservable","addPortfolio","newPortfolio","console","log","portfolioWithId","portfolio","updated","subscribe","deletePortfolio","undefined","filter","p","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/Karthi1708/-Financial-Portfolio-Management-System/src/app/core/services/portfolio.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, delay, Observable, of, tap } from 'rxjs';\nimport { Portfolio } from '../models/portfolio';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PortfolioService {\n  private _portfolios$ = new BehaviorSubject<Portfolio[]>([]);\n  constructor(private http: HttpClient) {}\n\n  getPortfolios(): Observable<Portfolio[]> {\n    if (!this._portfolios$?.value?.length) {\n      const mockData: Portfolio[] = [\n        {\n          id: 1,\n          assetType: 'Stock',\n          quantity: 100,\n          purchasePrice: 250,\n          purchaseDate: '2025-07-01',\n        },\n        // {\n        //   id: 2,\n        //   assetType: 'Bond',\n        //   quantity: 50,\n        //   purchasePrice: 105,\n        //   purchaseDate: '2025-06-20',\n        // },\n      ];\n      return of(mockData).pipe(\n        delay(300),\n        tap((data) => this._portfolios$.next(data))\n      );\n    } else {\n      return of(this._portfolios$.value).pipe(delay(100));\n    }\n  }\n\n  portfolios$(): Observable<Portfolio[]> {\n    return this._portfolios$.asObservable();\n  }\n\n  addPortfolio(newPortfolio: Portfolio): Observable<Portfolio> {\n    console.log('newPortfolio', newPortfolio);\n    const id = this._portfolios$.value.length + 1;\n    console.log('value', id);\n    const portfolioWithId = { ...newPortfolio, id };\n\n    return of(portfolioWithId).pipe(\n      delay(300),\n      tap((portfolio) => {\n        const updated = [...this._portfolios$.value, portfolio];\n        this._portfolios$.next(updated);\n        this._portfolios$.subscribe((data) => {\n          console.log('data', data);\n        });\n      })\n    );\n  }\n\n  deletePortfolio(id: number): Observable<void> {\n    return of(undefined).pipe(\n      delay(300),\n      tap(() => {\n        const updated = this._portfolios$.value.filter((p) => p.id !== id);\n        this._portfolios$.next(updated);\n      })\n    );\n  }\n\n  // Get from API\n  // getPortfolios(): Observable<Portfolio[]> {\n  //   return this.http\n  //     .get<Portfolio[]>(this.apiUrl)\n  //     .pipe(tap((data) => this.portfoliosSubject.next(data)));\n  // }\n\n  // addPortfolio(portfolio: Portfolio): Observable<Portfolio> {\n  //   return this.http\n  //     .post<Portfolio>(this.apiUrl, portfolio)\n  //     .pipe(tap(() => this.refreshPortfolios()));\n  // }\n\n  // updatePortfolio(id: number, portfolio: Portfolio): Observable<Portfolio> {\n  //   return this.http\n  //     .put<Portfolio>(`${this.apiUrl}/${id}`, portfolio)\n  //     .pipe(tap(() => this.refreshPortfolios()));\n  // }\n\n  // deletePortfolio(id: number): Observable<void> {\n  //   return this.http\n  //     .delete<void>(`${this.apiUrl}/${id}`)\n  //     .pipe(tap(() => this.refreshPortfolios()));\n  // }\n\n  // // Refresh local BehaviorSubject from server\n  // private refreshPortfolios(): void {\n  //   this.getPortfolios().subscribe();\n  // }\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAEC,KAAK,EAAcC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAGlE,MAGaC,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,YAAY,GAAG,IAAIP,eAAe,CAAc,EAAE,CAAC;EACpB;EAEvCQ,aAAaA,CAAA;IACX,IAAI,CAAC,IAAI,CAACD,YAAY,EAAEE,KAAK,EAAEC,MAAM,EAAE;MACrC,MAAMC,QAAQ,GAAgB,CAC5B;QACEC,EAAE,EAAE,CAAC;QACLC,SAAS,EAAE,OAAO;QAClBC,QAAQ,EAAE,GAAG;QACbC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;;MAEhB;MACA;MACA;MACA;MACA;MACA;MACA;MAAA,CACD;;MACD,OAAOd,EAAE,CAACS,QAAQ,CAAC,CAACM,IAAI,CACtBhB,KAAK,CAAC,GAAG,CAAC,EACVE,GAAG,CAAEe,IAAI,IAAK,IAAI,CAACX,YAAY,CAACY,IAAI,CAACD,IAAI,CAAC,CAAC,CAC5C;KACF,MAAM;MACL,OAAOhB,EAAE,CAAC,IAAI,CAACK,YAAY,CAACE,KAAK,CAAC,CAACQ,IAAI,CAAChB,KAAK,CAAC,GAAG,CAAC,CAAC;;EAEvD;EAEAmB,WAAWA,CAAA;IACT,OAAO,IAAI,CAACb,YAAY,CAACc,YAAY,EAAE;EACzC;EAEAC,YAAYA,CAACC,YAAuB;IAClCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,YAAY,CAAC;IACzC,MAAMX,EAAE,GAAG,IAAI,CAACL,YAAY,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC;IAC7Cc,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEb,EAAE,CAAC;IACxB,MAAMc,eAAe,GAAG;MAAE,GAAGH,YAAY;MAAEX;IAAE,CAAE;IAE/C,OAAOV,EAAE,CAACwB,eAAe,CAAC,CAACT,IAAI,CAC7BhB,KAAK,CAAC,GAAG,CAAC,EACVE,GAAG,CAAEwB,SAAS,IAAI;MAChB,MAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAACrB,YAAY,CAACE,KAAK,EAAEkB,SAAS,CAAC;MACvD,IAAI,CAACpB,YAAY,CAACY,IAAI,CAACS,OAAO,CAAC;MAC/B,IAAI,CAACrB,YAAY,CAACsB,SAAS,CAAEX,IAAI,IAAI;QACnCM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,IAAI,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC,CACH;EACH;EAEAY,eAAeA,CAAClB,EAAU;IACxB,OAAOV,EAAE,CAAC6B,SAAS,CAAC,CAACd,IAAI,CACvBhB,KAAK,CAAC,GAAG,CAAC,EACVE,GAAG,CAAC,MAAK;MACP,MAAMyB,OAAO,GAAG,IAAI,CAACrB,YAAY,CAACE,KAAK,CAACuB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,KAAKA,EAAE,CAAC;MAClE,IAAI,CAACL,YAAY,CAACY,IAAI,CAACS,OAAO,CAAC;IACjC,CAAC,CAAC,CACH;EACH;;;uBA7DWxB,gBAAgB,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBjC,gBAAgB;MAAAkC,OAAA,EAAhBlC,gBAAgB,CAAAmC,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA;;SAEPpC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}